II.38.3:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: elastic_force
    raw: Y * A * x / d
    prepared: v1 * v2 * v3 / v4
    accept:
        - ((v1*v2*v3)/v4)
        - (v1*v2*(v3/v4))
    vars:
        v1:
          name: Y
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: A
          type: (float, positive)
          units: [2, 0, 0, 0, 0]
          sample_range: [1.0e-4, 1.0e-2]
          sample_type: [log, pos]
        v3:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v4:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
        - v4 != 0
II.38.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: shear_modulus
    raw: Y / (2 * (1 + sigma))
    prepared: v1 / (2 * (1 + v2))
    accept:
        - (v1/(2.0*(v2+1.0)))
        - (v1/(2.0+(2.0*v2)))
        - ((0.5*v1)/(v2+1.0))
        - (v1/((2.0*v2)+2.0))
        - ((0.5*v1)/(1.0+v2))
    vars:
        v1:
          name: Y
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: sigma
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: mu_S
          type: (float)
          units: [-1, -2, 1, 0, 0]
    constraints:
        - 1 + v2 != 0
III.7.38:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electron_spin_splitting
    raw: 2 * mom * B / (6.626e-34 / (2 * pi))
    prepared: 2 * v1 * v2 / (6.626e-34 / (2 * 3.1415926535897))
    accept:
        - (1.89652439093854e34*v1*v2)
    vars:
        v1:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v0:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
    constraints:
III.12.43:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: photon_momentum
    raw: n * (6.626e-34 / (2 * pi))
    prepared: v1 * (6.626e-34 / (2 * 3.1415926535897))
    accept:
        - (1.05456065292693e-34*v1)
    vars:
        v1:
          name: n
          type: (integer)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [int, pos]
        v0:
          name: L
          type: (float)
          units: [2, -1, 1, 0, 0]
    constraints:
III.15.27:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: fine_structure_wavevector
    raw: 2 * pi * alpha / (n * d)
    prepared: 2 * 3.1415926535897 * v1 / (v2 * v3)
    accept:
        - ((6.2831853071794*v1)/(v2*v3))
    vars:
        v1:
          name: alpha
          type: (integer)
          units: [0, 0, 0, 0, 0]
          sample_range: [-1.0e2, 1.0e2]
          sample_type: [int, pos]
        v2:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [int, pos]
        v3:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v0:
          name: k
          type: (float)
          units: [-1, 0, 0, 0, 0]
    constraints:
        - v2 != 0
        - v3 != 0
I.12.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: magnetic_moment
    raw: mu * Nn
    prepared: v1 * v2
    accept:
        - (v1*v2)
    vars:
        v1:
          name: mu
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v2:
          name: Nn
          type: (float, positive)
          units: [1, -2, 1, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
I.12.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electric_field_point
    raw: q1 * r / (4 * pi * 8.854e-12 * r ^ 3)
    prepared: v1 * v2 / (4 * 3.1415926535897 * 8.854e-12 * v2 ^ 3)
    accept:
        - ((8.98774243798848e9*v1)/(v2^2.0))
    vars:
        v1:
          name: q1
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
    constraints:
        - v2 != 0
I.12.5:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electric_force
    raw: q2 * Ef
    prepared: v1 * v2
    accept:
        - (v1*v2)
    vars:
        v1:
          name: q2
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
I.14.3:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: earth_gravitational_potential
    raw: g * m * z
    prepared: 9.80665 * v1 * v2
    accept:
        - (9.80665*v1*v2)
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v2:
          name: z
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos_neg]
        v0:
          name: U
          type: (float)
          units: [2, -2, 1, 0, 0]
    constants:
        g:
          name: gravitational acceleration
          value: 9.80665
          unit:
    constraints:
I.14.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: spring_potential
    raw: 1 / 2 * k_spring * x ^ 2
    prepared: 1 / 2 * v1 * v2 ^ 2
    accept:
        - (0.5*v1*(v2^2.0))
    vars:
        v1:
          name: k_spring
          type: (float, positive)
          units: [0, -2, 1, 0, 0]
          sample_range: [1.0e2, 1.0e4]
          sample_type: [log, pos]
        v2:
          name: x
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos_neg]
        v0:
          name: U
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.18.12:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: torque
    raw: r * F * sin(theta)
    prepared: v1 * v2 * sin(v3)
    accept:
        - (v1*v2*sin(v3))
    vars:
        v1:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: tau
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.18.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: angular_momentum
    raw: m * r * v * sin(theta)
    prepared: v1 * v2 * v3 * sin(v4)
    accept:
        - (v1*v2*v3*sin(v4))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v4:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: L
          type: (float)
          units: [2, -1, 1, 0, 0]
    constraints:
I.25.13:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: capacitor_charge
    raw: q / C
    prepared: v1 / v2
    accept:
        - (v1/v2)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos_neg]
        v2:
          name: C
          type: (float, positive)
          units: [2, -2, 1, 0, -2]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constraints:
        - v2 != 0
I.26.2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: snells_law
    feyn: arcsin(n*sin(theta2))
    raw: sin(theta1) / sin(theta2)
    prepared: sin(v1) / sin(v2)
    accept:
        - (sin(v1)/sin(v2))
    vars:
        v1:
          name: theta1
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.5707963267948966]
          sample_type: [uni, pos]
        v2:
          name: theta2
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.5707963267948966]
          sample_type: [uni, pos]
        v0:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v1 * sin(v2) >= -pi /2
        - v1 * sin(v2) <= pi/2
I.27.6:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: lens_formula
    raw: 1 / (1 / d1 + n / d2)
    prepared: 1 / (1 / v1 + v2 / v3)
    accept:
        - ((v1*v3)/((v1*v2)+v3))
    vars:
        v1:
          name: d1
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v2:
          name: n
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: d2
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v0:
          name: foc
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v1 != 0
        - v3 != 0
I.30.5:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: diffraction_wavelength
    raw: lambda / (n * sin(theta))
    prepared: v1 / (v2 * sin(v3))
    accept:
        - (v1/(v2*sin(v3)))
    vars:
        v1:
          name: lambda
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v2:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [int, pos]
        v3:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.5707963267948966]
          sample_type: [uni, pos]
        v0:
          name: d
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v2 != 0
        - v3 != 0
        - v3 != pi
I.43.16:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electron_drift_velocity
    raw: mu_drift * q * Volt / d
    prepared: v1 * v2 * v3 / v4
    accept:
        - ((v1*v2*v3)/v4)
    vars:
        v1:
          name: mu_drift
          type: (float)
          units: [0, -1, 1, 0, 0]
          sample_range: [1.0e-6, 1.0e-4]
          sample_type: [log, pos_neg]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v3:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v0:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
    constraints:
        - v4 != 0
I.47.23:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: sound_speed
    raw: sqrt(gamma * pr / rho)
    prepared: sqrt(v1 * v2 / v3)
    accept:
        - sqrt(((v1*v2)/v3))
        - (sqrt(v2)*sqrt((v1/v3)))
    vars:
        v1:
          name: gamma
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 2.0]
          sample_type: [uni, pos]
        v2:
          name: pr
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
          sample_range: [5.0e-6, 1.5e-5]
          sample_type: [uni, pos]
        v3:
          name: rho
          type: (float, positive)
          units: [-3, 0, 1, 0, 0]
          sample_range: [1.0, 2.0]
          sample_type: [uni, pos]
        v0:
          name: c
          type: (float)
          units: [1, -1, 0, 0, 0]
    constraints:
        - v1 * v2 / v3 >= 0
        - v3 != 0
II.2.42:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: thermal_conduction
    raw: kappa * (T2 - T1) * A / d
    prepared: v1 * (v2 - v3) * v4 / v5
    accept:
        - ((v1*v4*(v2-v3))/v5)
    vars:
        v1:
          name: kappa
          type: (float, positive)
          units: [1, -3, 1, -1, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: T2
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v3:
          name: T1
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v4:
          name: A
          type: (float, positive)
          units: [2, 0, 0, 0, 0]
          sample_range: [1.0e-4, 1.0e-2]
          sample_type: [log, pos]
        v5:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: Pwr
          type: (float)
          units: [2, -3, 1, 0, 0]
    constraints:
        - v5 != 0
II.3.24:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: radiated_intensity
    raw: Pwr / (4 * pi * r ^ 2)
    prepared: v1 / (4 * 3.1415926535897 * v2 ^ 2)
    accept:
        - ((0.07957747154595002*v1)/(v2^2.0))
        - (0.07957747154595002*v1*sqrt((v2^-4.0))) # hmm
    vars:
        v1:
          name: Pwr
          type: (float)
          units: [2, -3, 1, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: flux
          type: (float)
          units: [0, -3, 1, 0, 0]
    constraints:
        - v2 != 0
II.4.23:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: point_charge_potential
    raw: q / (4 * pi * 8.854e-12 * r)
    prepared: v1 / (4 * 3.1415926535897 * 8.854e-12 * v2)
    accept:
        - ((8.98774243798848e9*v1)/v2)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constraints:
        - v2 != 0
II.8.31:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: energy_density_electric
    raw: 8.854e-12 * Ef ^ 2 / 2
    prepared: 8.854e-12 * v1 ^ 2 / 2
    accept:
        - (4.427e-12*(v1^2.0))
        - (4.427e-12*sqrt((v1^4.0))) # ok, I guess
    vars:
        v1:
          name: Ef
          type: (float, positive)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: E_den
          type: (float)
          units: [-1, -2, 1, 0, 0]
    constraints:
II.10.9:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electric_susceptibility
    raw: sigma_den / 8.854e-12 * 1 / (1 + chi)
    prepared: v1 / 8.854e-12 * 1 / (1 + v2)
    accept:
        - ((1.12943302462164e11*v1)/(v2+1.0))
    vars:
        v1:
          name: sigma_den
          type: (float)
          units: [0, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: chi
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos]
        v0:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
    constraints:
        - 1 + v2 != 0
II.13.17:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: radiated_power
    raw: 1 / (4 * pi * 8.854e-12 * c ^ 2) * 2 * I / r
    prepared: 1 / (4 * 3.1415926535897 * 8.854e-12 * 2.99792458e8 ^ 2) * 2 * v1 / v2
    accept:
        - ((2.0000424254846702e-7*v1)/v2)
    vars:
        v1:
          name: I
          type: (float)
          units: [2, -3, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v0:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 != 0
II.15.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: magnetic_potential_energy
    raw: -mom * B * cos(theta)
    prepared: neg(v1) * v2 * cos(v3)
    accept:
        - (-(v1)*v2*cos(v3))
        - (-1.0*v1*v2*cos(v3))
    vars:
        v1:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos_neg]
        v2:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v3:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
II.15.5:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electric_dipole_energy
    raw: -p_d * Ef * cos(theta)
    prepared: neg(v1) * v2 * cos(v3)
    accept:
        - (-(v1)*v2*cos(v3))
        - (-1.0*v1*v2*cos(v3))
    vars:
        v1:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v2:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v3:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
II.27.16:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electromagnetic_energy_density
    raw: 8.854e-12 * c * Ef ^ 2
    prepared: 8.854e-12 * 2.99792458e8 * v1 ^ 2
    accept:
        - (0.002654362423132*(v1^2.0))
    vars:
        v1:
          name: Ef
          type: (float, positive)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: flux
          type: (float)
          units: [0, -3, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
II.27.18:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: electric_energy_density
    raw: 8.854e-12 * Ef ^ 2
    prepared: 8.854e-12 * v1 ^ 2
    accept:
        - (8.854e-12*(v1^2.0))
    vars:
        v1:
          name: Ef
          type: (float, positive)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: E_den
          type: (float)
          units: [-1, -2, 1, 0, 0]
    constraints:
II.34.11:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: gyrofrequency
    raw: g_ * q * B / (2 * m)
    prepared: v1 * v2 * v3 / (2 * v4)
    accept:
        - ((v1*v2*v3)/(2.0*v4))
        - ((0.5*v1*v2*v3)/v4)
    vars:
        v1:
          name: g_
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [-1.0, 1.0]
          sample_type: [uni, pos]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v3:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-9, 1.0e-7]
          sample_type: [log, pos_neg]
        v4:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v0:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
    constraints:
        - v4 != 0
II.34.29b:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: easy
    moniker: magnetic_zeeman_energy
    raw: g_ * 9.2740100783e-24 * B * Jz / (6.626e-34 / (2 * pi))
    prepared: v1 * 9.2740100783e-24 * v2 * v3 / (6.626e-34 / (2 * 3.1415926535897))
    accept:
        - (8.79419315765292e10*v1*v2*v3)
    vars:
        v1:
          name: g_
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [-1.0, 1.0]
          sample_type: [uni, pos]
        v2:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v3:
          name: Jz
          type: (float)
          units: [2, -1, 1, 0, 0]
          sample_range: [1.0e-26, 1.0e-22]
          sample_type: [log, pos_neg]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.10.7:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_mass
    raw: m_0 / sqrt(1 - v ^ 2 / c ^ 2)
    prepared: v1 / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - (v1/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
        - ((1.0*v1)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: m_0
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e8]
          sample_type: [log, pos]
        v0:
          name: m
          type: (float)
          units: [0, 0, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 - v2 ^ 2 / 2.99792458e8 ^ 2 > 0
I.11.19:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: dot_product
    raw: x1 * y1 + x2 * y2 + x3 * y3
    prepared: v1 * v2 + v3 * v4 + v5 * v6
    accept:
        - ((v1*v2)+(v3*v4)+(v5*v6))
    vars:
        v1:
          name: x1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: y1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: x2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: y2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v5:
          name: x3
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v6:
          name: y3
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: A
          type: (float)
          units: [2, 0, 0, 0, 0]
    constraints:
I.12.2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: coulomb_force
    raw: q1 * q2 * r / (4 * pi * 8.854e-12 * r ^ 3)
    prepared: v1 * v2 * v3 / (4 * 3.1415926535897 * 8.854e-12 * v3 ^ 3)
    accept:
        - ((8.98774243798848e9*v1*v2)/(v3^2.0))
    vars:
        v1:
          name: q1
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: q2
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
        - v3 != 0
I.12.11:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: lorentz_force
    raw: q * (Ef + B * v * sin(theta))
    prepared: v1 * (v2 + v3 * v4 * sin(v5))
    accept:
        - (v1*(v2+(v3*v4*sin(v5))))
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: B
          type: (float, positive)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v4:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v5:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.5707963267948966]
          sample_type: [uni, pos]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
I.13.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: kinetic_energy
    raw: 1 / 2 * m * (v ^ 2 + u ^ 2 + w ^ 2)
    prepared: 1 / 2 * v1 * (v2 ^ 2 + v3 ^ 2 + v4 ^ 2)
    accept:
        - (0.5*v1*((v2^2.0)+(v3^2.0)+(v4^2.0)))
        - (0.5*v1*((v2^2.0)+(v3^2.0)+(1.0*(v4^2.0))))
        - (0.5*((v2^2.0)+(v3^2.0)+(v4^2.0))*sqrt((v1^2.0)))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float,)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: u
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: w
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: K
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.13.12:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: gravitational_potential
    raw: G * m1 * m2 * (1 / r2 - 1 / r1)
    prepared: 6.67430e-11 * v1 * v2 * (1 / v3 - 1 / v4)
    accept:
        - ((6.6743e-11*v1*v2*(-(v3)+v4))/(v3*v4))
    vars:
        v1:
          name: m1
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v2:
          name: m2
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v3:
          name: r2
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v4:
          name: r1
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: U
          type: (float)
          units: [2, -2, 1, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
    constraints:
        - v3 != 0
        - v4 != 0
I.15.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_momentum
    raw: m_0 * v / sqrt(1 - v ^ 2 / c ^ 2)
    prepared: v1 * v2 / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - ((v1*v2)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
        - ((1.0*v1*v2)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: m_0
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v0:
          name: p
          type: (float)
          units: [1, -1, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 - v2 ^ 2 / 2.99792458e8 ^ 2 > 0
I.16.6:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_velocity_addition
    raw: (u + v) / (1 + u * v / c ^ 2)
    prepared: (v1 + v2) / (1 + v1 * v2 / 2.99792458e8 ^ 2)
    accept:
        - ((v1+v2)/((1.11265005605362e-17*v1*v2)+1.0))
    vars:
        v1:
          name: u
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos_neg]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos_neg]
        v0:
          name: v1
          type: (float)
          units: [1, -1, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 + v1 * v2 != 0
I.18.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: center_of_mass
    raw: (m1 * r1 + m2 * r2) / (m1 + m2)
    prepared: (v1 * v2 + v3 * v4) / (v1 + v3)
    accept:
        - (((v1*v2)+(v3*v4))/(v1+v3))
        - ((1.0*((v1*v2)+(v3*v4)))/(v1+v3))
    vars:
        v1:
          name: m1
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: r1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: m2
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v4:
          name: r2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: r
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v1 + v3 != 0
I.24.6:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: harmonic_energy
    raw: 1 / 2 * m * (omega ^ 2 + omega_0 ^ 2) * 1 / 2 * x ^ 2
    prepared: 1 / 2 * v1 * (v2 ^ 2 + v3 ^ 2) * 1 / 2 * v4 ^ 2
    accept:
        - (0.25*v1*(v4^2.0)*((v2^2.0)+(v3^2.0)))
        - (0.25*v1*(v4^2.0)*((1.0*(v2^2.0))+(v3^2.0)))
        - (v1*(v4^2.0)*((0.25*(v2^2.0))+(0.25*(v3^2.0))))
        - (0.25*v1*(v4^2.0)*((v2^2.0)+(1.0*(v3^2.0))))
        - (0.25*(v1^1.0)*(v4^2.0)*((v2^2.0)+(v3^2.0)))
        - (v1*(v4^2.0)*((0.25*(v2^2.0))+(0.25*(v3^2.0))))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: omega_0
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.29.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: normalized_frequency
    raw: omega / c
    prepared: v1 / 2.99792458e8
    accept:
        - (3.33564095198152e-9*v1)
    vars:
        v1:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v0:
          name: k
          type: (float)
          units: [-1, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
I.32.5:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: radiation_reaction
    raw: q ^ 2 * a ^ 2 / (6 * pi * 8.854e-12 * c ^ 3)
    prepared: v1 ^ 2 * v2 ^ 2 / (6 * 3.1415926535897 * 8.854e-12 * 2.99792458e8 ^ 3)
    accept:
        - (2.22380780671571e-16*(v1^2.0)*(v2^2.0))
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: a
          type: (float, positive)
          units: [1, -2, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos]
        v0:
          name: Pwr
          type: (float)
          units: [2, -3, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 != 0
        - v4 != 0
I.34.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_doppler_shift
    raw: omega_0 / (1 - v / c)
    prepared: v1 / (1 - v2 / 2.99792458e8)
    accept:
        - (-(v1)/((3.33564095198152e-9*v2)-1.0))
        - ((-2.9979245800000006e8*v1)/(v2-2.9979245800000006e8))
    vars:
        v1:
          name: omega_0
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v0:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 2.99792458e8 - v2 != 0
I.34.8:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: cyclotron_frequency
    raw: q * v * B / p
    prepared: v1 * v2 * v3 / v4
    accept:
        - ((v1*v2*v3)/v4)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v3:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v4:
          name: p
          type: (float)
          units: [1, -1, 1, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v0:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
    constraints:
        - v4 != 0
I.34.27:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: photon_energy
    raw: (6.626e-34 / (2 * pi)) * omega
    prepared: (6.626e-34 / (2 * 3.1415926535897)) * v1
    accept:
        - (1.05456065292693e-34*v1)
    vars:
        v1:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.38.12:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: fine_structure
    raw: 4 * pi * 8.854e-12 * (6.626e-34 / (2 * pi)) ^ 2 / (m * q ^ 2)
    prepared: 4 * 3.1415926535897 * 8.854e-12 * (6.626e-34 / (2 * 3.1415926535897)) ^ 2 / (v1 * v2 ^ 2)
    accept:
        - (1.23734984438491e-78/(v1*(v2^2.0)))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-28, 1.0e-26]
          sample_type: [log, pos]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v0:
          name: r
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v1 != 0
        - v2 != 0
I.39.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: ideal_gas_internal_energy
    raw: 3 / 2 * pr * V
    prepared: 3 / 2 * v1 * v2
    accept:
        - (1.5*v1*v2)
    vars:
        v1:
          name: pr
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
          sample_range: [1.0e4, 1.0e6]
          sample_type: [log, pos]
        v2:
          name: V
          type: (float, positive)
          units: [3, 0, 0, 0, 0]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
I.39.11:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: polytropic_energy
    raw: 1 / (gamma - 1) * pr * V
    prepared: 1 / (v1 - 1) * v2 * v3
    accept:
        - ((v2*v3)/(v1-1.0))
    vars:
        v1:
          name: gamma
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 2.0]
          sample_type: [uni, pos]
        v2:
          name: pr
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
          sample_range: [1.0e4, 1.0e6]
          sample_type: [log, pos]
        v3:
          name: V
          type: (float, positive)
          units: [3, 0, 0, 0, 0]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v1 - 1 != 0
I.43.31:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: thermal_mobility
    raw: mob * 1.380649e-23 * T
    prepared: v1 * 1.380649e-23 * v2
    accept:
        - (1.380649e-23*v1*v2)
    vars:
        v1:
          name: mob
          type: (float, positive)
          units: [0, 1, -1, 0, 0]
          sample_range: [1.0e13, 1.0e15]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: D
          type: (float)
          units: [2, -1, 0, 0, 0]
    constraints:
I.43.43:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: energy_per_volume
    raw: 1 / (gamma - 1) * 1.380649e-23 * v / A
    prepared: 1 / (v1 - 1) * 1.380649e-23 * v2 / v3
    accept:
        - ((1.380649e-23*v2)/(v3*(v1-1.0)))
        - (v2/(v3*((7.24297051603992e22*v1)-7.24297051603992e22)))
    vars:
        v1:
          name: gamma
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 2.0]
          sample_type: [uni, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e2, 1.0e4]
          sample_type: [log, pos]
        v3:
          name: A
          type: (float, positive)
          units: [2, 0, 0, 0, 0]
          sample_range: [1.0e-21, 1.0e-19]
          sample_type: [log, pos]
        v0:
          name: kappa
          type: (float)
          units: [1, -3, 1, -1, 0]
    constraints:
        - v1 - 1 != 0
        - v3 != 0
I.48.2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_energy
    raw: m * c ^ 2 / sqrt(1 - v ^ 2 / c ^ 2)
    prepared: v1 * 2.99792458e8 ^ 2 / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - ((8.98755178736818e16*v1)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-29, 1.0e-27]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 - v2 ^ 2 / 2.99792458e8 ^ 2 > 0
II.6.11:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: dipole_potential
    raw: 1 / (4 * pi * 8.854e-12) * p_d * cos(theta) / r ^ 2
    prepared: 1 / (4 * 3.1415926535897 * 8.854e-12) * v1 * cos(v2) / v3 ^ 2
    accept:
        - ((8.98774243798848e9*v1*cos(v2))/(v3^2.0))
    vars:
        v1:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v2:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constraints:
        - v3 != 0
II.8.7:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: electrostatic_energy
    raw: 3 / 5 * q ^ 2 / (4 * pi * 8.854e-12 * d)
    prepared: 3 / 5 * v1 ^ 2 / (4 * 3.1415926535897 * 8.854e-12 * v2)
    accept:
        - ((5.39264546279309e9*(v1^2.0))/v2)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-12, 1.0e-10]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v2 != 0
II.11.3:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: driven_oscillator
    raw: q * Ef / (m * (omega_0 ^ 2 - omega ^ 2))
    prepared: v1 * v2 / (v3 * (v4 ^ 2 - v5 ^ 2))
    accept:
        - ((v1*v2)/(v3*((v4^2.0)-(v5^2.0))))
        - ((v1*v2)/(v3*(v4-v5)*(v4+v5)))
        - ((1.0*v1*v2)/(v3*(v4-v5)*(v4+v5))) # hmm, ok
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: Ef
          type: (float, positive)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e-9, 1.0e-7]
          sample_type: [log, pos]
        v3:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-28, 1.0e-26]
          sample_type: [log, pos]
        v4:
          name: omega_0
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v5:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v0:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v3 != 0
        - v4 ^ 2 - v5 ^ 2 != 0
II.21.32:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_coulomb_potential
    raw: q / (4 * pi * 8.854e-12 * r * (1 - v / c))
    prepared: v1 / (4 * 3.1415926535897 * 8.854e-12 * v2 * (1 - v3 / 2.99792458e8))
    accept:
        - ((-8.98774243798848e9*v1)/(v2*((3.33564095198152e-9*v3)-1.0)))
        - ((-2.6944573973554796e18*v1)/(v2*(v3-2.9979245800000006e8)))
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos]
        v3:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 != 0
        - 2.99792458e8 - v3 > 0
II.34.2a:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: current_loop_field
    raw: q * v / (2 * pi * r)
    prepared: v1 * v2 / (2 * 3.1415926535897 * v3)
    accept:
        - ((0.1591549430919*v1*v2)/v3)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v0:
          name: I
          type: (float)
          units: [2, -3, 1, 0, -1]
    constraints:
        - v3 != 0
II.34.2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: magnetic_dipole_moment
    raw: q * v * r / 2
    prepared: v1 * v2 * v3 / 2
    accept:
        - ((v1*v2*v3)/2.0)
        - (0.5*v1*v2*v3)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v0:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
    constraints:
II.34.29a:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: bohr_magneton
    raw: q * 6.626e-34 / (4 * pi * m)
    prepared: v1 * 6.626e-34 / (4 * 3.1415926535897 * v2)
    accept:
        - ((5.27280326463465e-35*v1)/v2)
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v2:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v0:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
    constraints:
        - v2 != 0
II.37.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: effective_magnetic_moment
    raw: mom * (1 + chi) * B
    prepared: v1 * (1 + v2) * v3
    accept:
        - (v1*v3*(v2+1.0))
    vars:
        v1:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos_neg]
        v2:
          name: chi
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e4, 1.0e6]
          sample_type: [log, pos_neg]
        v3:
          name: B
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
III.4.32:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: bose_einstein_distribution
    raw: 1 / (exp((6.626e-34 / (2 * pi)) * omega / (1.380649e-23 * T)) - 1)
    prepared: 1 / (exp((6.626e-34 / (2 * 3.1415926535897)) * v1 / (1.380649e-23 * v2)) - 1)
    accept:
        - (1.0/(exp(((7.63815171652556e-12*v1)/v2))-1.0))
    vars:
        v1:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: n
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v1 != 0
        - v2 != 0
III.8.54:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: quantum_oscillation
    raw: sin(E_n * t / (6.626e-34 / (2 * pi))) ^ 2
    prepared: sin(v1 * v2 / (6.626e-34 / (2 * 3.1415926535897))) ^ 2
    accept:
        - (sin((9.48262195469272e33*v1*v2))^2.0)
    vars:
        v1:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos_neg]
        v2:
          name: t
          type: (float, positive)
          units: [0, 1, 0, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v0:
          name: prob
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
III.13.18:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: tunneling_probability
    raw: 2 * E_n * d ^ 2 * k / (6.626e-34 / (2 * pi))
    prepared: 2 * v1 * v2 ^ 2 * v3 / (6.626e-34 / (2 * 3.1415926535897))
    accept:
        - (1.89652439093854e34*v1*(v2^2.0)*v3)
    vars:
        v1:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos_neg]
        v2:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v3:
          name: k
          type: (float, positive)
          units: [-1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
    constraints:
III.14.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: diode_current
    raw: I_0 * (exp(q * Volt / (1.380649e-23 * T)) - 1)
    prepared: v1 * (exp(v2 * v3 / (1.380649e-23 * v4)) - 1)
    accept:
        - (v1*(exp(((7.24297051603992e22*v2*v3)/v4))-1.0))
    vars:
        v1:
          name: I_0
          type: (float)
          units: [2, -3, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: q
          type: (float, positive)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos]
        v3:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: I
          type: (float)
          units: [2, -3, 1, 0, -1]
    constraints:
        - v4 != 0
III.15.12:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: energy_bandwidth
    raw: 2 * U * (1 - cos(k * d))
    prepared: 2 * v1 * (1 - cos(v2 * v3))
    accept:
        - (2.0*v1*(1.0-cos((v2*v3))))
    vars:
        v1:
          name: U
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v2:
          name: k
          type: (float, positive)
          units: [-1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
III.15.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: quantum_kinetic_energy
    raw: (6.626e-34 / (2 * pi)) ^ 2 / (2 * E_n * d ^ 2)
    prepared: (6.626e-34 / (2 * 3.1415926535897)) ^ 2 / (2 * v1 * v2 ^ 2)
    accept:
        - (5.56049085350836e-69/(v1*(v2^2.0)))
    vars:
        v1:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v2:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v0:
          name: m
          type: (float)
          units: [0, 0, 1, 0, 0]
    constraints:
        - v1 != 0
        - v2 != 0
III.17.37:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_beta_factor
    raw: beta * (1 + alpha * cos(theta))
    prepared: v1 * (1 + v2 * cos(v3))
    accept:
        - (v1*((v2*cos(v3))+1.0))
    vars:
        v1:
          name: beta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos_neg]
        v3:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: f
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
III.19.51:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: hydrogen_energy_level
    raw: -m * q ^ 4 / (2 * (4 * pi * 8.854e-12) ^ 2 * (6.626e-34 / (2 * pi)) ^ 2) * (1 / n ^ 2)
    prepared: neg(v1) * v2 ^ 4 / (2 * (4 * 3.1415926535897 * 8.854e-12) ^ 2 * (6.626e-34 / (2 * 3.1415926535897)) ^ 2) * (1 / v3 ^ 2)
    accept:
        - ((-3.63185176721637e87*v1*(v2^4.0))/(v3^2.0))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v3:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [int, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v3 != 0
B8:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: relativistic_energy_loss
    feyn_name: Compton Scattering
    raw: E_n / (1 + E_n / (9.10938356e-31 * c ^ 2) * (1 - cos(theta)))
    prepared: v1 / (1 + v1 / (9.10938356e-31 * 2.99792458e8 ^ 2) * (1 - cos(v2)))
    accept:
        - (-(v1)/((1.22143287602835e13*v1*(cos(v2)-1.0))-1.0))
    vars:
        v1:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-24, 1.0e-22]
          sample_type: [log, pos]
        v2:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [-3.1415926535897, 3.1415926535897]
          sample_type: [uni, pos]
        v0:
          name: K
          type: (float)
          units: [2, -2, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v1 * (1 - cos(v2)) / (9.10938356e-31 * 2.99792458e8 ^ 2) != -1
B18:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: cosmological_density
    feyn_name: 15.2.1 Weinberg
    raw: 3 / (8 * pi * G) * (c ^ 2 * k_f / r ^ 2 + H_G ^ 2)
    prepared: 3 / (8 * 3.1415926535897 * 6.67430e-11) * (2.99792458e8 ^ 2 * v1 / v2 ^ 2 + v3 ^ 2)
    accept:
        - (((1.60737451109564e26*v1)/(v2^2.0))+(1.78844533986972e9*(v3^2.0)))
    vars:
        v1:
          name: k_f
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v3:
          name: H_G
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos_neg]
        v0:
          name: rho_0
          type: (float)
          units: [-3, 0, 1, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 != 0
I.8.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: medium
    moniker: euclidean_2d
    raw: sqrt((x2 - x1) ^ 2 + (y2 - y1) ^ 2)
    prepared: sqrt((v1 - v2) ^ 2 + (v3 - v4) ^ 2)
    accept:
        - sqrt((((v1-v2)^2.0)+((v3-v4)^2.0)))
    vars:
        v1:
          name: x2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: x1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: y2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: y1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: d
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
I.6.2a:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: gaussian_std
    raw: exp(-theta ^ 2 / 2) / sqrt(2 * pi)
    prepared: exp(neg(v1 ^ 2) / 2) / sqrt(2 * 3.1415926535897)
    accept:
        - (0.398942280401439*exp((-((v1^2.0))/2.0)))
        - (0.398942280401439/exp(((v1^2.0)/2.0)))
        - (0.398942280401439*exp((-0.5*(v1^2.0))))
        - (0.398942280401439/exp((0.5*(v1^2.0))))
        - (0.398942280401439*sqrt(exp(-((v1^2.0)))))
        - (0.398942280401439/sqrt(exp((v1^2.0))))
        - (0.398942280401439*(0.6065306597126334^(v1^2.0)))
    vars:
        v1:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: f
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
I.6.2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: gaussian
    raw: exp(-(theta / sigma) ^ 2 / 2) / (sqrt(2 * pi) * sigma)
    prepared: exp(neg((v1 / v2) ^ 2) / 2) / (sqrt(2 * 3.1415926535897) * v2)
    accept:
        - ((0.398942280401439*exp((-((v1^2.0))/(2.0*(v2^2.0)))))/v2) # TODO: many more forms
        - ((0.398942280401439/exp(((v1^2.0)/(2.0*(v2^2.0)))))/v2)
        - ((0.398942280401439*exp(((-0.5*(v1^2.0))/(v2^2.0))))/v2)
        - ((0.398942280401439/exp(((0.5*(v1^2.0))/(v2^2.0))))/v2)
        - ((0.398942280401439*sqrt(exp((-((v1^2.0))/(v2^2.0)))))/v2)
        - ((0.398942280401439/sqrt(exp(((v1^2.0)/(v2^2.0)))))/v2)
        - ((0.398942280401439*exp((-0.5*((v1/v2)^2.0))))/v2)
        - ((0.398942280401439/exp((0.5*((v1/v2)^2.0))))/v2)
        - (0.398942280401439*sqrt(((0.6065306597126334^((2.0*(v1^2.0))/(v2^2.0)))/(v2^2.0))))
        - ((0.398942280401439*(0.6065306597126334^((v1^2.0)/(v2^2.0))))/v2)
        - (0.398942280401439*sqrt((exp((-((v1^2.0))/(v2^2.0)))/(v2^2.0))))
        - ((0.398942280401439*(0.6065306597126334^((v1^2.0)/(v2^2.0))))/v2)
    vars:
        v1:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: sigma
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: f
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v2 != 0
I.6.2b:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: gaussian_shifted
    raw: exp(-((theta - theta1) / sigma) ^ 2 / 2) / (sqrt(2 * pi) * sigma)
    prepared: exp(neg(((v1 - v2) / v3) ^ 2) / 2) / (sqrt(2 * 3.1415926535897) * v3)
    accept:
        - ((0.398942280401439*exp((-(((v1-v2)^2.0))/(2.0*(v3^2.0)))))/v3) # TODO: many more forms
        - ((0.398942280401439*exp(((-0.5*((v1-v2)^2.0))/(v3^2.0))))/v3)
        - ((0.398942280401439*sqrt(exp((-(((v1-v2)^2.0))/(v3^2.0)))))/v3)
        - ((0.398942280401439/sqrt(exp((((v1-v2)^2.0)/(v3^2.0)))))/v3)
        - (0.398942280401439*sqrt((exp((-(((v1-v2)^2.0))/(v3^2.0)))/(v3^2.0))))
        - ((0.398942280401439*(0.6065306597126334^(((v1-v2)^2.0)/(v3^2.0))))/v3)
    vars:
        v1:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v2:
          name: theta1
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v3:
          name: sigma
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: f
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v3 != 0
I.9.18:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: newton_gravity
    raw: 6.6743e-11 * m1 * m2 / ((x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2)
    prepared: 6.6743e-11 * v1 * v2 / ((v3 - v4) ^ 2 + (v5 - v6) ^ 2 + (v7 - v8) ^ 2)
    accept:
        - ((6.6743e-11*v1*v2)/(((v3-v4)^2.0)+((v5-v6)^2.0)+((v7-v8)^2.0)))
    vars:
        v1:
          name: m1
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0, 1.0e3]
          sample_type: [log, pos]
        v2:
          name: m2
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0, 1.0e3]
          sample_type: [log, pos]
        v3:
          name: x2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v4:
          name: x1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v5:
          name: y2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v6:
          name: y1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v7:
          name: z2
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v8:
          name: z1
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
        - (v3 - v4) ^ 2 + (v5 - v6) ^ 2 + (v7 - v8) ^ 2 != 0
I.15.3t:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: lorentz_time
    raw: (t - u * x / c ^ 2) / sqrt(1 - u ^ 2 / c ^ 2)
    prepared: (v1 - v2 * v3 / 2.99792458e8 ^ 2) / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - ((v1-(1.11265005605362e-17*v2*v3))/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: t
          type: (float, positive)
          units: [0, 1, 0, 0, 0]
          sample_range: [1.0e-6, 1.0e-4]
          sample_type: [log, pos]
        v2:
          name: u
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos_neg]
        v3:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos_neg]
        v0:
          name: t1
          type: (float)
          units: [0, 1, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 - v2 ^ 2 / 2.99792458e8 ^ 2 >= 0
I.29.16:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: law_of_cosines
    raw: sqrt(x1 ^ 2 + x2 ^ 2 - 2 * x1 * x2 * cos(theta1 - theta2))
    prepared: sqrt(v1 ^ 2 + v2 ^ 2 - 2 * v1 * v2 * cos(v3 - v4))
    accept:
        - sqrt((((v1^2.0)-(2.0*v1*v2*cos((v3-v4))))+(v2^2.0)))
        - sqrt(((-(v1)*v2*((2.0*cos((v3-v4)))+2.0))+((v1+v2)^2.0)))
        - sqrt(((-(v1)*v2*((2.0*cos((v3-v4)))-2.0))+((v1-v2)^2.0)))
        - sqrt(((v1*(v1-(2.0*v2*cos((v3-v4)))))+(v2^2.0)))
        - sqrt(((-2.0*v1*v2*cos((v3-v4)))+(v1^2.0)+(v2^2.0)))
        - (1.4142135623730951*sqrt(((-(v1)*v2*(cos((v3-v4))-1.0))+(0.5*((v1-v2)^2.0)))))
        - sqrt(((v1^2.0)-(v2*((2.0*v1*cos((v3-v4)))-v2))))
        - sqrt(((v1^2.0)-(v2*((2.0*v1*sin((-(v3)+v4+1.5707963267948966)))-v2))))
    vars:
        v1:
          name: x1
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: x2
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v3:
          name: theta1
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v4:
          name: theta2
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
I.15.3x:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: lorentz_length
    raw: (x - u * t) / sqrt(1 - u ^ 2 / c ^ 2)
    prepared: (v1 - v2 * v3) / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - ((v1-(v2*v3))/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos_neg]
        v2:
          name: u
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos_neg]
        v3:
          name: t
          type: (float)
          units: [0, 1, 0, 0, 0]
          sample_range: [1.0e-6, 1.0e-4]
          sample_type: [log, pos]
        v0:
          name: x1
          type: (float)
          units: [1, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 1 - v2 ^ 2 / 2.99792458e8 ^ 2 > 0
I.30.3:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: diffraction_intensity
    raw: Int_0 * sin(n * theta / 2) ^ 2 / sin(theta / 2) ^ 2
    prepared: v1 * sin(v2 * v3 / 2) ^ 2 / sin(v3 / 2) ^ 2
    accept:
        - ((2.0*v1*(sin(((v2*v3)/2.0))^2.0))/(1.0-cos(v3)))
        - ((2.0*v1*(sin((0.5*v2*v3))^2.0))/(1.0-cos(v3)))
        - ((-2.0*v1*(sin(((v2*v3)/2.0))^2.0))/(cos(v3)-1.0))
        - ((-2.0*v1*(sin((0.5*v2*v3))^2.0))/(cos(v3)-1.0))
        - ((0.5*v1*(1.0-cos((v2*v3))))/(sin((0.5*v3))^2.0))
        - ((v1*(cos((v2*v3))-1.0))/(cos(v3)-1.0))
        - ((v1*(1.0-cos((v2*v3))))/(1.0-cos(v3)))
        - ((1.0*v1*(cos((v2*v3))-1.0))/(cos(v3)-1.0))
        - ((0.4768*v1*(cos((v2*v3))-1.0))/((0.4768*cos(v3))-0.4768)) # any factor would be equivalent -> does not make sense to fill up the list with all of them
    vars:
        v1:
          name: Int_0
          type: (float, positive)
          units: [0, -3, 1, 0, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v2:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [int, pos]
        v3:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [-6.283185307179586, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: Int
          type: (float)
          units: [0, -3, 1, 0, 0]
    constraints:
        - sin(v3 / 2) != 0
I.32.17:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: dipole_radiation_power
    raw: (1 / 2 * 8.854e-12 * c * Ef ^ 2) * (8 * pi * r ^ 2 / 3) * (omega ^ 4 / (omega ^ 2 - omega_0 ^ 2) ^ 2)
    prepared: (1 / 2 * 8.854e-12 * 2.99792458e8 * v1 ^ 2) * (8 * 3.1415926535897 * v2 ^ 2 / 3) * (v3 ^ 4 / (v3 ^ 2 - v4 ^ 2) ^ 2)
    accept:
        - ((0.0111185673179681*(v1^2.0)*(v2^2.0)*(v3^4.0))/(((v3^2.0)-(v4^2.0))^2.0))
        - ((0.0111185673179681*(v1^2.0)*(v2^2.0)*(v3^4.0))/(((v3-v4)^2.0)*((v3+v4)^2.0)))
        - ((0.0111185673179681*(v1^2.0)*(v2^2.0)*(v3^4.0))/(((1.0*(v3^2.0))-(v4^2.0))^2.0))
        - ((0.0111185673179681*(v1^2.0)*(v2^2.0)*(v3^4.0))/(((v3^2.0)-(1.0*(v4^2.0)))^2.0))
    vars:
        v1:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v3:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v4:
          name: omega_0
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v0:
          name: Pwr
          type: (float)
          units: [2, -3, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 ^ 2 - v4 ^ 2 != 0
I.37.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: interference_intensity
    raw: I1 + I2 + 2 * sqrt(I1 * I2) * cos(delta)
    prepared: v1 + v2 + 2 * sqrt(v1 * v2) * cos(v3)
    accept:
        - (v1+v2+(2.0*sqrt((v1*v2))*cos(v3)))
        - ((2.0*sqrt(v1)*sqrt(v2)*cos(v3))+v1+v2)
    vars:
        v1:
          name: I1
          type: (float, positive)
          units: [0, -3, 1, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v2:
          name: I2
          type: (float, positive)
          units: [0, -3, 1, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v3:
          name: delta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: Int
          type: (float)
          units: [0, -3, 1, 0, 0]
    constraints:
        - v1*v2 >= 0
I.39.22:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: ideal_gas_pressure
    raw: n * 1.380649e-23 * T / V
    prepared: v1 * 1.380649e-23 * v2 / v3
    accept:
        - ((1.380649e-23*v1*v2)/v3)
    vars:
        v1:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v3:
          name: V
          type: (float, positive)
          units: [3, 0, 0, 0, 0]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v0:
          name: pr
          type: (float)
          units: [-1, -2, 1, 0, 0]
    constraints:
        - v3 != 0
I.40.1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: barometric_formula
    raw: n_0 * exp(-m * g * x / (1.380649e-23 * T))
    prepared: v1 * exp(neg(v2) * 9.80665 * v3 / (1.380649e-23 * v4))
    accept:
        - (v1*exp(((-7.10292768111229e23*v2*v3)/v4)))
    vars:
        v1:
          name: n_0
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e25, 1.0e27]
          sample_type: [log, pos]
        v2:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-24, 1.0e-22]
          sample_type: [log, pos]
        v3:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos_neg]
        v4:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: n
          type: (float)
          units: [0, 0, 0, 0, 0]
    constants:
        g:
          name: gravitational acceleration
          value: 9.80665
          unit:
    constraints:
        - v4 != 0
I.41.16:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: planck_radiation
    raw: 6.626e-34 / (2 * pi) * omega ^ 3 / (pi ^ 2 * c ^ 2 * (exp((6.626e-34 / (2 * pi)) * omega / (1.380649e-23 * T)) - 1))
    prepared: 6.626e-34 / (2 * 3.1415926535897) * v1 ^ 3 / (3.1415926535897 ^ 2 * 2.99792458e8 ^ 2 * (exp((6.626e-34 / (2 * 3.1415926535897)) * v1 / (1.380649e-23 * v2)) - 1))
    accept:
        - ((1.18885916993963e-52*(v1^3.0))/(exp(((7.63815171652556e-12*v1)/v2))-1.0))
    vars:
        v1:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: L_rad
          type: (float)
          units: [0, -2, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 != 0
I.44.4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: entropy_change
    raw: n * 1.380649e-23 * T * ln(V2 / V1)
    prepared: v1 * 1.380649e-23 * v2 * log(v3 / v4)
    accept:
        - (1.380649e-23*v1*v2*log((v3/v4)))
        - (-1.3806e-23*v1*v2*log((v4/v3)))
        - (1.380649e-23*v1*v2*(log(v3)-log(v4)))
        - (-1.380649e-23*v1*v2*(log(v4)-log(v3)))
    vars:
        v1:
          name: n
          type: (integer -> real due to its order, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [10e24, 10e26]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v3:
          name: V2
          type: (float, positive)
          units: [3, 0, 0, 0, 0]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v4:
          name: V1
          type: (float, positive)
          units: [3, 0, 0, 0, 0]
          sample_range: [1.0e-5, 1.0e-3]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v4 != 0
        - v3 / v4 > 0
I.50.26:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: nonlinear_oscillator
    raw: x1 * (cos(omega * t) + alpha * cos(omega * t) ^ 2)
    prepared: v1 * (cos(v2 * v3) + v4 * cos(v2 * v3) ^ 2)
    accept:
        - (v1*((v4*cos((v2*v3)))+1.0)*cos((v2*v3)))
        - (v1*((1.0*v4*cos((v2*v3)))+1.0)*cos((v2*v3)))
    vars:
        v1:
          name: x1
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v2:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v3:
          name: t
          type: (float, positive)
          units: [0, 1, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v4:
          name: alpha
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v0:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
I.34.14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_frequency_shift
    raw: (1 + v / c) / sqrt(1 - v ^ 2 / c ^ 2) * omega_0
    prepared: (1 + v1 / 2.99792458e8) / sqrt(1 - v1 ^ 2 / 2.99792458e8 ^ 2) * v2
    accept:
        - ((v2*((3.33564095198152e-9*v1)+1.0))/sqrt((1.0-(1.11265005605362e-17*(v1^2.0)))))
    vars:
        v1:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos_neg]
        v2:
          name: omega_0
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v0:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 2.99792458e8 ^ 2 - v1 ^ 2 > 0
        - v2 != 0
II.6.15b:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: dipole_field_theta
    raw: p_d / (4 * pi * 8.854e-12) * 3 * cos(theta) * sin(theta) / r ^ 3
    prepared: v1 / (4 * 3.1415926535897 * 8.854e-12) * 3 * cos(v2) * sin(v2) / v3 ^ 3
    accept:
        - ((1.34816136569827e10*v1*sin((2.0*v2)))/(v3^3.0))
        - ((1.34816136569827e10*v1*cos(((2.0*v2)-1.5707963267948966)))/(v3^3.0))
    vars:
        v1:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v2:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 3.1415926535897]
          sample_type: [uni, pos]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v0:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
    constraints:
        - v3 != 0
II.6.15a:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: dipole_field_z
    raw: p_d / (4 * pi * 8.854e-12) * 3 * z / r ^ 5 * sqrt(x ^ 2 + y ^ 2)
    prepared: v1 / (4 * 3.1415926535897 * 8.854e-12) * 3 * v2 / v3 ^ 5 * sqrt(v4 ^ 2 + v5 ^ 2)
    accept:
        - ((2.69632273139655e10*v1*v2*sqrt(((v4^2.0)+(v5^2.0))))/(v3^5.0))
    vars:
        v1:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v2:
          name: z
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos_neg]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v4:
          name: x
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos_neg]
        v5:
          name: y
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos_neg]
        v0:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
    constraints:
        - v3 != 0
II.11.17:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: polarizable_density
    raw: n_0 * (1 + p_d * Ef * cos(theta) / (1.380649e-23 * T))
    prepared: v1 * (1 + v2 * v3 * cos(v4) / (1.380649e-23 * v5))
    accept:
        - ((v1*((7.24297051603992e22*v2*v3*cos(v4))+v5))/v5)
    vars:
        v1:
          name: n_0
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e27, 1.0e29]
          sample_type: [log, pos]
        v2:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v3:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v4:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v5:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: n
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v5 != 0
II.11.20:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: polarizability_density
    raw: n_rho * p_d ^ 2 * Ef / (3 * 1.380649e-23 * T)
    prepared: v1 * v2 ^ 2 * v3 / (3 * 1.380649e-23 * v4)
    accept:
        - ((2.41432350534664e22*v1*(v2^2.0)*v3)/v4)
    vars:
        v1:
          name: n_rho
          type: (integer -> real due to its order, positive)
          units: [-3, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v3:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v4:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: Pol
          type: (float)
          units: [0, -2, 1, 0, -1]
    constraints:
        - v4 != 0
II.11.27:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: polarization_field
    raw: n * alpha / (1 - (n * alpha / 3)) * 8.854e-12 * Ef
    prepared: v1 * v2 / (1 - (v1 * v2 / 3)) * 8.854e-12 * v3
    accept:
        - ((-2.6562e-11*v1*v2*v3)/((v1*v2)-3.0))
    vars:
        v1:
          name: n
          type: (integer -> real due to its order, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-33, 1.0e-31]
          sample_type: [log, pos]
        v3:
          name: Ef
          type: (float, positive)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: Pol
          type: (float)
          units: [0, -2, 1, 0, -1]
    constraints:
        - 1 - (v1 * v2 / 3) != 0
II.11.28:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: dielectric_constant
    raw: 1 + n * alpha / (1 - (n * alpha / 3))
    prepared: 1 + v1 * v2 / (1 - (v1 * v2 / 3))
    accept:
        - (((-2.0*v1*v2)-3.0)/((v1*v2)-3.0))
    vars:
        v1:
          name: n
          type: (integer -> real due to its order, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-33, 1.0e-31]
          sample_type: [log, pos]
        v0:
          name: theta
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - 1-(v1*v2/3) != 0
II.13.23:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_charge_density
    raw: rho_c_0 / sqrt(1 - v ^ 2 / c ^ 2)
    prepared: v1 / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - (v1/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
        - ((1.0*v1)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: rho_c_0
          type: (float, positive)
          units: [-1, -2, 1, 0, -1]
          sample_range: [1.0e27, 1.0e29]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos]
        v0:
          name: rho_c
          type: (float)
          units: [-1, -2, 1, 0, -1]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 2.99792458e8 ^ 2 - v2 ^ 2 > 0
II.13.34:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_current_density
    raw: rho_c_0 * v / sqrt(1 - v ^ 2 / c ^ 2)
    prepared: v1 * v2 / sqrt(1 - v2 ^ 2 / 2.99792458e8 ^ 2)
    accept:
        - ((v1*v2)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
        - ((1.0*v1*v2)/sqrt((1.0-(1.11265005605362e-17*(v2^2.0)))))
    vars:
        v1:
          name: rho_c_0
          type: (float, positive)
          units: [-1, -2, 1, 0, -1]
          sample_range: [1.0e27, 1.0e29]
          sample_type: [log, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos]
        v0:
          name: j
          type: (float)
          units: [0, -3, 1, 0, -1]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - 2.99792458e8 ^ 2 - v2 ^ 2 > 0
II.24.17:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: wavevector
    raw: sqrt(omega ^ 2 / c ^ 2 - pi ^ 2 / d ^ 2)
    prepared: sqrt(v1 ^ 2 / 2.99792458e8 ^ 2 - 3.1415926535897 ^ 2 / v2 ^ 2)
    accept:
        - (3.1415926535897*sqrt(((1.12735020659073e-18*(v1^2.0))-(1.0/(v2^2.0)))))
    vars:
        v1:
          name: omega
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v2:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v0:
          name: k
          type: (float)
          units: [-1, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v1 ^ 2 / 2.99792458e8 ^ 2 - pi ^ 2 / v2 ^ 2 >= 0
        - v2 != 0
II.35.18:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: boltzmann_population
    raw: n_0 / (exp(mom * B / (1.380649e-23 * T)) + exp(-mom * B / (1.380649e-23 * T)))
    prepared: v1 / (exp(v2 * v3 / (1.380649e-23 * v4)) + exp(neg(v2) * v3 / (1.380649e-23 * v4)))
    accept:
        - (v1/(2.0*cosh(((7.24297051603992e22*v2*v3)/v4)))) # TODO: other simplification?
    vars:
        v1:
          name: n_0
          type: (integer -> real due to its order, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: mom
          type: (float, positive)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos]
        v3:
          name: B
          type: (float, positive)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v4:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: n
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v4 != 0
II.35.21:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: magnetization_density
    raw: n_rho * mom * tanh(mom * B / (1.380649e-23 * T))
    prepared: v1 * v2 * tanh(v2 * v3 / (1.380649e-23 * v4))
    accept:
        - (v1*v2*tanh(((7.24297051603992e22*v2*v3)/v4)))
    vars:
        v1:
          name: n_rho
          type: (integer -> real due to its order, positive)
          units: [-3, 0, 0, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: mom
          type: (float, positive)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos]
        v3:
          name: B
          type: (float, positive)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v4:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: M
          type: (float)
          units: [1, -3, 1, 0, -1]
    constraints:
        - v4 != 0
II.36.38:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: susceptibility_magnetization
    raw: mom * H / (1.380649e-23 * T) + (mom * alpha) / (8.854e-12 * c ^ 2 * 1.380649e-23 * T) * M
    prepared: v1 * v2 / (1.380649e-23 * v3) + (v1 * v4) / (8.854e-12 * 2.99792458e8 ^ 2 * 1.380649e-23 * v3) * v5
    accept:
        - ((v1*((7.24297051603992e22*v2)+(9.10197825916707e16*v4*v5)))/v3)
    vars:
        v1:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos_neg]
        v2:
          name: H
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v3:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v4:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.0]
          sample_type: [uni, pos]
        v5:
          name: M
          type: (integer -> real due to its order, positive)
          units: [1, -3, 1, 0, -1]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v0:
          name: f
          type: (float)
          units: [0, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 != 0
III.4.33:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: planck_energy_distribution
    raw: (6.626e-34 / (2 * pi)) * omega / (exp((6.626e-34 / (2 * pi)) * omega / (1.380649e-23 * T)) - 1)
    prepared: (6.626e-34 / (2 * 3.1415926535897)) * v1 / (exp((6.626e-34 / (2 * 3.1415926535897)) * v1 / (1.380649e-23 * v2)) - 1)
    accept:
        - ((1.05456065292693e-34*v1)/(exp(((7.63815171652556e-12*v1)/v2))-1.0))
    vars:
        v1:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v2:
          name: T
          type: (float, positive)
          units: [0, 0, 0, 1, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v1 != 0
        - v2 != 0
III.9.52:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: rabi_flopping
    srsd: (p_d * Ef * t / (6.626e-34 / (2 * pi))) ^ 2 * sin((omega - omega_0) * t / 2) ^ 2 / ((omega - omega_0) * t / 2) ^ 2
    raw: (p_d * Ef * t / (6.626e-34 / (2 * pi))) * sin((omega - omega_0) * t / 2) ^ 2 / ((omega - omega_0) * t / 2) ^ 2
    prepared: (v1 * v2 * v3 / (6.626e-34 / (2 * 3.1415926535897))) * sin((v4 - v5) * v3 / 2) ^ 2 / ((v4 - v5) * v3 / 2) ^ 2
    accept:
        - ((3.79304878187709e34*v1*v2*(sin(((v3*(v4-v5))/2.0))^2.0))/(v3*((v4-v5)^2.0)))
    vars:
        v1:
          name: p_d
          type: (float)
          units: [3, -2, 1, 0, -1]
          sample_range: [1.0e-22, 1.0e-20]
          sample_type: [log, pos_neg]
        v2:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v3:
          name: t
          type: (float, positive)
          units: [0, 1, 0, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v4:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v5:
          name: omega_0
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v0:
          name: prob
          type: (float)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v3 != 0
        - v4 - v5 != 0
III.10.19:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: total_magnetic_moment
    raw: mom * sqrt(Bx ^ 2 + By ^ 2 + Bz ^ 2)
    prepared: v1 * sqrt(v2 ^ 2 + v3 ^ 2 + v4 ^ 2)
    accept:
        - (v1*sqrt(((v2^2.0)+(v3^2.0)+(v4^2.0))))
    vars:
        v1:
          name: mom
          type: (float)
          units: [4, -3, 1, 0, -1]
          sample_range: [1.0e-25, 1.0e-23]
          sample_type: [log, pos_neg]
        v2:
          name: Bx
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v3:
          name: By
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v4:
          name: Bz
          type: (float)
          units: [-2, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v0:
          name: E_n
          type: (float)
          units: [2, -2, 1, 0, 0]
    constraints:
III.21.20:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: lorentz_current
    raw: -rho_c_0 * q * A_vec / m
    prepared: neg(v1) * v2 * v3 / v4
    accept:
        - ((-(v1)*v2*v3)/v4)
        - ((-1.0*v1*v2*v3)/v4)
    vars:
        v1:
          name: rho_c_0
          type: (float)
          units: [-1, -2, 1, 0, -1]
          sample_range: [1.0e-29, 1.0e-27, uses_positive=False]
          sample_type: [log, pos_neg]
        v2:
          name: q
          type: (float, positive)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9, uses_positive=False]
          sample_type: [log, pos_neg]
        v3:
          name: A_vec
          type: (float)
          units: [-1, 1, 0, 0, 1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v4:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v0:
          name: j
          type: (float)
          units: [0, -3, 1, 0, -1]
    constraints:
        - v4 != 0
B1:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: rutherford_scattering
    raw: (Z_1 * Z_2 * alpha * 1.054571817e-34 * c / (4 * E_n * sin(theta / 2) ^ 2)) ^ 2
    prepared: (v1 * v2 * 7.2973525693e-3 * 1.054571817e-34 * 2.99792458e8 / (4 * v3 * sin(v4 / 2) ^ 2)) ^ 2
    accept:
        - ((3.32662926626791e-57*(v1^2.0)*(v2^2.0))/((v3^2.0)*(sin((v4/2.0))^4.0)))
        - ((3.32662926626791e-57*(v1^2.0)*(v2^2.0))/((v3^2.0)*(sin((0.5*v4))^4.0)))
        - ((1.330651706507164e-56*(v1^2.0)*(v2^2.0))/((v3^2.0)*((cos(v4)-1.0)^2.0)))
    vars:
        v1:
          name: Z_1
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [int, pos]
        v2:
          name: Z_2
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [int, pos]
        v3:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v4:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: A
          type: (float)
          units: [2, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 != 0
        - sin(v4 / 2) != 0
B2:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: gravitational_wave_energy
    feyn_name: 3.55 Goldstein
    raw: m * k_G / L ^ 2 * (1 + sqrt(1 + 2 * E_n * L ^ 2 / (m * k_G ^ 2)) * cos(theta1 - theta2))
    prepared: v1 * v2 / v3 ^ 2 * (1 + sqrt(1 + 2 * v4 * v3 ^ 2 / (v1 * v2 ^ 2)) * cos(v5 - v6))
    accept:
        - ((v1*v2*((sqrt((1.0+((2.0*(v3^2.0)*v4)/(v1*(v2^2.0)))))*cos((v5-v6)))+1.0))/(v3^2.0))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: k_G
          type: (float, positive)
          units: [3, -2, 1, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v3:
          name: L
          type: (float, positive)
          units: [2, -1, 1, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v4:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e25, 1.0e27]
          sample_type: [log, pos]
        v5:
          name: theta1
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v6:
          name: theta2
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: k
          type: (float)
          units: [-1, 0, 0, 0, 0]
    constraints:
        - v1 != 0
        - v2 != 0
        - v4 * v3 ^ 2 / (v1 * v2 ^ 2) >= -1 / 2
B3:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: compton_wavelength_shift
    feyn_name: 3.64 Goldstein
    raw: d * (1 - alpha ^ 2) / (1 + alpha * cos(theta1 - theta2))
    prepared: v1 * (1 - v2 ^ 2) / (1 + v2 * cos(v3 - v4))
    accept:
        - ((v1*(1.0-(v2^2.0)))/((v2*cos((v3-v4)))+1.0))
        - ((-(v1)*((v2^2.0)-1.0))/((v2*cos((v3-v4)))+1.0))
    vars:
        v1:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 1.0]
          sample_type: [uni, pos]
        v3:
          name: theta1
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v4:
          name: theta2
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: r
          type: (float)
          units: [1, 0, 0, 0, 0]
    constraints:
        - v2 * cos(v3 - v4) != -1
B4:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: quantum_angular_momentum
    feyn_name: 3.16 Goldstein
    raw: sqrt(2 / m * (E_n - U - L ^ 2 / (2 * m * r ^ 2)))
    prepared: sqrt(2 / v1 * (v2 - v3 - v4 ^ 2 / (2 * v1 * v5 ^ 2)))
    accept:
        - sqrt(((((2.0*v2)-(2.0*v3))-((v4^2.0)/(v1*(v5^2.0))))/v1))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e25, 1.0e27]
          sample_type: [log, pos]
        v3:
          name: U
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e25, 1.0e27]
          sample_type: [log, pos]
        v4:
          name: L
          type: (float, positive)
          units: [2, -1, 1, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos_neg]
        v5:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v0:
          name: v
          type: (float)
          units: [1, -1, 0, 0, 0]
    constraints:
        - 2 / v1 * (v2 - v3 - v4 ^ 2 / (2 * v1 * v5 ^ 2)) >= 0
        - v1 != 0
        - v5 != 0
B5:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: orbital_period
    feyn_name: 3.74 Goldstein
    raw: 2 * pi * d ^ (3 / 2) / sqrt(G * (m1 + m2))
    prepared: 2 * 3.1415926535897 * v1 ^ (3 / 2) / sqrt(6.67430e-11 * (v2 + v3))
    accept:
        - ((769089.720197159*(v1^1.5))/sqrt((v2+v3)))
        - ((769089.720197159*(v1^2.0))/sqrt((v1*(v2+v3))))
        - ((769089.720197159*v1)/sqrt(((v2+v3)/v1)))
        - (769089.720197159*sqrt(((v1^3.0)/(v2+v3))))
        - (769089.720197159*v1*sqrt((v1/(v2+v3))))
        - (769089.720197159*v1*sqrt((v1/(v2+v3))))
        - (769089.720197159/sqrt(((v2+v3)/(v1^3.0))))
    vars:
        v1:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v2:
          name: m1
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v3:
          name: m2
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v0:
          name: t
          type: (float, positive)
          units: [0, 1, 0, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
    constraints:
        - v2 != 0
        - v2 + v3 != 0
        - v2 * (v2 + v3) > 0
B6:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_orbit_shift
    feyn_name: 3.99 Goldstein
    raw: sqrt(1 + 2 * epsilon ^ 2 * E_n * L ^ 2 / (m * (Z_1 * Z_2 * q ^ 2) ^ 2))
    prepared: sqrt(1 + 2 * v1 ^ 2 * v2 * v3 ^ 2 / (v4 * (v5 * v6 * v7 ^ 2) ^ 2))
    accept:
        - sqrt((((2.0*(v1^2.0)*v2*(v3^2.0))/(v4*(v5^2.0)*(v6^2.0)*(v7^4.0)))+1.0))
        - (1.4142135623730951*sqrt(((((v1^2.0)*v2*(v3^2.0))/(v4*(v5^2.0)*(v6^2.0)*(v7^4.0)))+0.5)))
    vars:
        v1:
          name: epsilon
          type: (float)
          units: [-1, 2, -1, 0, 2]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos_neg]
        v2:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
          sample_range: [1.0e-18, 1.0e-16]
          sample_type: [log, pos]
        v3:
          name: L
          type: (float, positive)
          units: [2, -1, 1, 0, 0]
          sample_range: [1.0e-10, 1.0e-8]
          sample_type: [log, pos]
        v4:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v5:
          name: Z_1
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [int, pos]
        v6:
          name: Z_2
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e1]
          sample_type: [int, pos]
        v7:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v0:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
    constraints:
        - v4 != 0
        - v5 != 0
        - v6 != 0
        - v7 != 0
        - 1 + 2 * v1 * v2 * v3 ^ 2 / (v4 * (v5 * v6 * v7 ^ 2) ^ 2) >= 0
B7:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: cosmological_expansion_rate
    feyn_name: Friedman Equation
    raw: sqrt(8 * pi * G * rho / 3 - alpha * c ^ 2 / d ^ 2)
    prepared: sqrt(8 * 3.1415926535897 * 6.67430e-11 * v1 / 3 - v2 * 2.99792458e8 ^ 2 / v3 ^ 2)
    accept:
        - (2.99792458e8*sqrt(((6.22132547889144e-27*v1)-(v2/(v3^2.0)))))
    vars:
        v1:
          name: rho
          type: (float, positive)
          units: [-3, 0, 1, 0, 0]
          sample_range: [1.0e-28, 1.0e-26]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (Integer)
          units: [0, 0, 0, 0, 0]
          sample_range: [-1.0, 2.0]
          sample_type: [int, pos]
        v3:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e25, 1.0e27]
          sample_type: [log, pos]
        v0:
          name: H_G
          type: (float)
          units: [0, -1, 0, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 != 0
        - 6.67430e-11 * v1 * v3 ^ 2 / 3 >= v2 * 2.99792458e8 ^ 2
B9:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: gravitational_wave_power
    feyn_name: Gravitational wave ratiated power
    raw: -32/5 * G ^ 4 / c ^ 5 * (m1 * m2) ^ 2 * (m1 + m2) / r ^ 5
    prepared: neg(32/5) * 6.67430e-11 ^ 4 / 2.99792458e8 ^ 5 * (v1 * v2) ^ 2 * (v1 + v2) / v3 ^ 5
    accept:
        - ((5.24444281156413e-83*(v1^2.0)*(v2^2.0)*(-(v1)-v2))/(v3^5.0))
        - ((-5.24444281156413e-83*(v1^2.0)*(v2^2.0)*(v1+v2))/(v3^5.0))
    vars:
        v1:
          name: m1
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v2:
          name: m2
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e23, 1.0e25]
          sample_type: [log, pos]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v0:
          name: Pwr
          type: (float)
          units: [2, -3, 1, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v3 != 0
B10:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_aberration
    feyn_name: Relativistic aberration
    feyn: arccos((cos(theta2)-v/c)/(1-v/c*cos(theta2)))
    raw: (cos(theta2) - v / c) / (1 - v / c * cos(theta2))
    prepared: (cos(v1) - v2 / 2.99792458e8) / (1 - v2 / 2.99792458e8 * cos(v1))
    accept:
        - (((3.33564095198152e-9*v2)-cos(v1))/((3.33564095198152e-9*v2*cos(v1))-1.0))
    vars:
        v1:
          name: theta2
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 3.1415926535897]
          sample_type: [uni, pos]
        v2:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e6, 1.0e8]
          sample_type: [log, pos_neg]
        v0:
          name: theta1
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 / 2.99792458e8 * cos(v1) != 1
        - (cos(v1) - v2 / 2.99792458e8) / (1 - v2 / 2.99792458e8 * cos(v1)) >= 1
        - (cos(v1) - v2 / 2.99792458e8) / (1 - v2 / 2.99792458e8 * cos(v1)) <= 1
B11:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: diffraction_intensity_pattern
    feyn_name: N-slit diffraction
    raw: I_0 * (sin(alpha / 2) * sin(n * delta / 2) / (alpha / 2 * sin(delta / 2))) ^ 2
    prepared: v1 * (sin(v2 / 2) * sin(v3 * v4 / 2) / (v2 / 2 * sin(v4 / 2))) ^ 2
    accept:
        - ((8.0*v1*(sin((v2/2.0))^2.0)*(sin(((v3*v4)/2.0))^2.0))/((v2^2.0)*(1.0-cos(v4))))
    vars:
        v1:
          name: I_0
          type: (float, positive)
          units: [2, -3, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos]
        v2:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v3:
          name: n
          type: (integer, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [int, pos]
        v4:
          name: delta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v0:
          name: I
          type: (float)
          units: [2, -3, 1, 0, -1]
    constraints:
B12:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: charged_plate_potential
    feyn_name: 2.11 Jackson
    raw: q / (4 * pi * epsilon * y ^ 2) * (4 * pi * epsilon * Volt * d - q * d * y ^ 3 / (y ^ 2 - d ^ 2) ^ 2)
    prepared: v1 / (4 * 3.1415926535897 * v2 * v3 ^ 2) * (4 * 3.1415926535897 * v2 * v4 * v5 - v1 * v5 * v3 ^ 3 / (v3 ^ 2 - v5 ^ 2) ^ 2)
    accept:
        - (((-0.07957747154595002*(v1^2.0)*v3*v5)/(v2*(((v3^2.0)-(v5^2.0))^2.0)))+((1.0*v1*v4*v5)/(v3^2.0))) # TODO: why 1.0*?
    vars:
        v1:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v2:
          name: epsilon
          type: (float, positive)
          units: [-1, 2, -1, 0, 2]
          sample_range: [1.0e-12, 1.0e-10]
          sample_type: [log, pos]
        v3:
          name: y
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v4:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v5:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v0:
          name: F
          type: (float)
          units: [1, -2, 1, 0, 0]
    constraints:
        - v3 != 0
B13:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: electric_potential_dipole
    feyn_name: 3.45 Jackson
    raw: 1 / (4 * pi * epsilon) * q / sqrt(r ^ 2 + d ^ 2 - 2 * r * d * cos(alpha))
    prepared: 1 / (4 * 3.1415926535897 * v1) * v2 / sqrt(v3 ^ 2 + v4 ^ 2 - 2 * v3 * v4 * cos(v5))
    accept:
        - ((0.07957747154595002*v2)/(v1*sqrt((((v3^2.0)-(2.0*v3*v4*cos(v5)))+(v4^2.0)))))
    vars:
        v1:
          name: epsilon
          type: (float, positive)
          units: [-1, 2, -1, 0, 2]
          sample_range: [1.0e-12, 1.0e-10]
          sample_type: [log, pos]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-3, 1.0e-1]
          sample_type: [log, pos_neg]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v4:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v5:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 3.1415926535897]
          sample_type: [uni, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constraints:
        - v3 ^ 2 + v4 ^ 2 - 2 * v3 * v4 * cos(v5) > 0
B14:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: field_effect_on_dipole
    feyn_name: 4.60' Jackson
    raw: Ef * cos(theta) * (-r + d ^ 3 / r ^ 2 * (alpha - 1) / (alpha + 2))
    prepared: v1 * cos(v2) * (neg(v3) + v4 ^ 3 / v3 ^ 2 * (v5 - 1) / (v5 + 2))
    accept:
        - ((-(v1)*(((v3^3.0)*(v5+2.0))-((v4^3.0)*(v5-1.0)))*cos(v2))/((v3^2.0)*(v5+2.0)))
    vars:
        v1:
          name: Ef
          type: (float)
          units: [-1, 0, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v2:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 3.1415926535897]
          sample_type: [uni, pos]
        v3:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v4:
          name: d
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-2, 1.0]
          sample_type: [log, pos]
        v5:
          name: alpha
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos]
        v0:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
    constraints:
        - v3 != 0
        - v5 != -2
B15:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: transverse_doppler_shift
    feyn_name: 11.38 Jackson
    raw: sqrt(1 - v ^ 2 / c ^ 2) * omega / (1 + v / c * cos(theta))
    prepared: sqrt(1 - v1 ^ 2 / 2.99792458e8 ^ 2) * v2 / (1 + v1 / 2.99792458e8 * cos(v3))
    accept:
        - ((v2*sqrt((1.0-(1.11265005605362e-17*(v1^2.0)))))/((3.33564095198152e-9*v1*cos(v3))+1.0))
    vars:
        v1:
          name: v
          type: (float, positive)
          units: [1, -1, 0, 0, 0]
          sample_range: [1.0e5, 1.0e7]
          sample_type: [log, pos]
        v2:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v3:
          name: theta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: omega_0
          type: (float)
          units: [0, -1, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v1 / 2.99792458e8 * cos(v3) != -1
        - 2.99792458e8 ^ 2 - v1 ^ 2 >= 0
B16:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: relativistic_hamiltonian
    feyn_name: 8.56 Goldstein
    raw: sqrt((p - q * A_vec) ^ 2 * c ^ 2 + m ^ 2 * c ^ 4) + q * Volt
    prepared: sqrt((v1 - v2 * v3) ^ 2 * 2.99792458e8 ^ 2 + v4 ^ 2 * 2.99792458e8 ^ 4) + v2 * v5
    accept:
        - ((v2*v5)+(8.98755178736818e16*sqrt(((v4^2.0)+(1.11265005605362e-17*((v1-(v2*v3))^2.0))))))
    vars:
        v1:
          name: p
          type: (float)
          units: [1, -1, 1, 0, 0]
          sample_range: [1.0e-9, 1.0e-7]
          sample_type: [log, pos_neg]
        v2:
          name: q
          type: (float)
          units: [2, -2, 1, 0, -1]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v3:
          name: A_vec
          type: (float)
          units: [-1, 1, 0, 0, 1]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v4:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v5:
          name: Volt
          type: (float)
          units: [0, 0, 0, 0, 1]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v0:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
B17:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: quantum_oscillator_energy
    feyn_name: 12.80' Goldstein
    raw: 1 / (2 * m) * (p ^ 2 + m ^ 2 * omega ^ 2 * x ^ 2 * (1 + alpha * x / y))
    prepared: 1 / (2 * v1) * (v2 ^ 2 + v1 ^ 2 * v3 ^ 2 * v4 ^ 2 * (1 + v5 * v4 / v6))
    accept:
        - ((((v1^2.0)*(v3^2.0)*(v4^2.0)*((v4*v5)+v6))+((v2^2.0)*v6))/(2.0*v1*v6))
    vars:
        v1:
          name: m
          type: (float, positive)
          units: [0, 0, 1, 0, 0]
          sample_range: [1.0e-30, 1.0e-28]
          sample_type: [log, pos]
        v2:
          name: p
          type: (float)
          units: [1, -1, 1, 0, 0]
          sample_range: [1.0e-9, 1.0e-7]
          sample_type: [log, pos_neg]
        v3:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos_neg]
        v4:
          name: x
          type: (float)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos_neg]
        v5:
          name: alpha
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e-1, 1.0e1]
          sample_type: [log, pos_neg]
        v6:
          name: y
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e-11, 1.0e-9]
          sample_type: [log, pos]
        v0:
          name: E_n
          type: (float, positive)
          units: [2, -2, 1, 0, 0]
    constraints:
        - v1 != 0
        - v6 != 0
B19:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: cosmological_pressure
    feyn_name: 15.2.2 Weinberg
    raw: -1 / (8 * pi * G) * (c ^ 4 * k_f / r ^ 2 + H_G ^ 2 * c ^ 2 * (1 - 2 * alpha))
    prepared: -1 / (8 * 3.1415926535897 * 6.67430e-11) * (2.99792458e8 ^ 4 * v1 / v2 ^ 2 + v3 ^ 2 * 2.99792458e8 ^ 2 * (1 - 2 * v4))
    accept:
        - (((-4.81545388672257e42*v1)+((v2^2.0)*(v3^2.0)*((1.0715830073971e26*v4)-5.35791503698548e25)))/(v2^2.0))
    vars:
        v1:
          name: k_f
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [1.0e1, 1.0e3]
          sample_type: [log, pos_neg]
        v2:
          name: r
          type: (float, positive)
          units: [1, 0, 0, 0, 0]
          sample_range: [1.0e8, 1.0e10]
          sample_type: [log, pos]
        v3:
          name: H_G
          type: (float)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0, 1.0e2]
          sample_type: [log, pos]
        v4:
          name: alpha
          type: (float)
          units: [0, 0, 0, 0, 0]
          sample_range: [-10.0, 10.0]
          sample_type: [uni, pos]
        v0:
          name: pr
          type: (float, positive)
          units: [-1, -2, 1, 0, 0]
    constants:
        G:
          name: gravitational constant
          value: 6.67430e-11
          unit:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
        - v2 != 0
B20:
    sources:
      - Feynman lectures, Feynman Symbolic Regression Benchmark
      - variable sampling ranges from Matsubara et at. 2024
      - moniker generated by ChatGPT
    difficulty: hard
    moniker: thomson_scattering_cross_section
    feyn_name: Klein-Nishina (13.132 Schwarz)
    raw: 1 / (4 * pi) * 7.2973525693e-3 ^ 2 * 6.626e-34 ^ 2 / (9.10938356e-31 ^ 2 * c ^ 2) * (omega_0 / omega) ^ 2 * (omega_0 / omega + omega / omega_0 - sin(beta) ^ 2)
    prepared: 1 / (4 * 3.1415926535897) * 7.2973525693e-3 ^ 2 * 6.626e-34 ^ 2 / (9.10938356e-31 ^ 2 * 2.99792458e8 ^ 2) * (v1 / v2) ^ 2 * (v1 / v2 + v2 / v1 - sin(v3) ^ 2)
    accept:
        - ((2.49461928032845e-29*v1*(((v1^2.0)-(v1*v2*(sin(v3)^2.0)))+(v2^2.0)))/(v2^3.0))
        - ((2.49461928032845e-29*v1*((v1*(v1-(v2*(sin(v3)^2.0))))+(v2^2.0)))/(v2^3.0))
    vars:
        v1:
          name: omega_0
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v2:
          name: omega
          type: (float, positive)
          units: [0, -1, 0, 0, 0]
          sample_range: [1.0e9, 1.0e11]
          sample_type: [log, pos]
        v3:
          name: beta
          type: (float, positive)
          units: [0, 0, 0, 0, 0]
          sample_range: [0.0, 6.283185307179586]
          sample_type: [uni, pos]
        v0:
          name: A
          type: (float)
          units: [2, 0, 0, 0, 0]
    constants:
        c:
          name: speed of light
          value: 2.99792458e8
          unit:
    constraints:
